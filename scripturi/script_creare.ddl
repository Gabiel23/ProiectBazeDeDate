-- Generated by Oracle SQL Developer Data Modeler 24.3.0.240.1210
--   at:        2024-12-09 00:36:21 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE accesoriu (
    id_acesoriu NUMBER(5) NOT NULL,
    denumire    VARCHAR2(30) NOT NULL,
    tarif       NUMBER(3) NOT NULL,
    stoc        NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE accesoriu
    ADD CONSTRAINT acesoriu_denumire_ck
        CHECK ( denumire IN ( 'Casca', 'Claxon', 'Cosulet', 'Cotiere', 'Genunchiere',
                              'Lumini', 'Sticla de apa' ) );

ALTER TABLE accesoriu
    ADD CONSTRAINT accesoriu_tarif_ck
        CHECK ( tarif IN ( 25, 50, 75, 100 ) );

ALTER TABLE accesoriu ADD CONSTRAINT accesoriu_stoc_ck CHECK ( stoc >= 0 );

ALTER TABLE accesoriu ADD CONSTRAINT accesoriu_pk PRIMARY KEY ( id_acesoriu );

ALTER TABLE accesoriu ADD CONSTRAINT accesoriu_denumire_un UNIQUE ( denumire );

CREATE TABLE articole (
    cnp          CHAR(13) NOT NULL,
    data_inceput DATE NOT NULL,
    tip          VARCHAR2(9) NOT NULL,
    model        VARCHAR2(7) NOT NULL,
    id_acesoriu  NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE articole
    ADD CONSTRAINT articole_pk
        PRIMARY KEY ( cnp,
                      data_inceput,
                      tip,
                      model,
                      id_acesoriu );

CREATE TABLE bicicleta (
    tip   VARCHAR2(9) NOT NULL,
    model VARCHAR2(7) NOT NULL,
    tarif NUMBER(3) NOT NULL,
    stoc  NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE bicicleta
    ADD CONSTRAINT bicicleta_tip_ck
        CHECK ( tip IN ( 'mountain ', 'cursiera', 'electrica', 'gravel', 'oras' ) );

ALTER TABLE bicicleta
    ADD CONSTRAINT bicicleta_model_ck
        CHECK ( model IN ( 'barbati', 'copii', 'dame' ) );

ALTER TABLE bicicleta
    ADD CONSTRAINT bicicleta_tarif_ck
        CHECK ( tarif IN ( 250, 400, 600, 750, 900,
                           1000, 1250, 1500, 1750, 2000 ) );

ALTER TABLE bicicleta
    ADD CONSTRAINT bicicleta_stoc_ck CHECK ( stoc BETWEEN 0 AND 10 );

ALTER TABLE bicicleta ADD CONSTRAINT bicicleta_pk PRIMARY KEY ( tip,
                                                                model );

CREATE TABLE client (
    cnp      CHAR(13) NOT NULL,
    serie_ci CHAR(2) NOT NULL,
    numar_ci NUMBER(6) NOT NULL,
    nume     VARCHAR2(20) NOT NULL,
    prenume  VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE client
    ADD CONSTRAINT client_cnp_ck
        CHECK ( REGEXP_LIKE ( cnp,
                              '^\d{13}$' )
                AND substr(cnp, 1, 1) IN ( '1', '2', '5', '6' )
                AND TO_NUMBER(substr(cnp, 4, 2)) BETWEEN 1 AND 12
                AND ( ( TO_NUMBER(substr(cnp, 4, 2)) IN ( 1, 3, 5, 7, 8,
                                                          10, 12 )
                        AND TO_NUMBER(substr(cnp, 6, 2)) BETWEEN 1 AND 31 )
                      OR ( TO_NUMBER(substr(cnp, 4, 2)) IN ( 4, 6, 9, 11 )
                           AND TO_NUMBER(substr(cnp, 6, 2)) BETWEEN 1 AND 30 )
                      OR ( TO_NUMBER(substr(cnp, 4, 2)) = 2
                           AND ( ( substr(cnp, 1, 1) IN ( '1', '2' )
                                   AND MOD(TO_NUMBER('1900'
                                                     || substr(cnp, 2, 2)),
                                           4) = 0
                                   AND ( MOD(TO_NUMBER('1900'
                                                       || substr(cnp, 2, 2)),
                                             100) != 0
                                         OR MOD(TO_NUMBER('1900'
                                                          || substr(cnp, 2, 2)),
                                                400) = 0 )
                                   AND TO_NUMBER(substr(cnp, 6, 2)) BETWEEN 1 AND 29 )
                                 OR ( substr(cnp, 1, 1) IN ( '5', '6' )
                                      AND MOD(TO_NUMBER('2000'
                                                        || substr(cnp, 2, 2)),
                                              4) = 0
                                      AND ( MOD(TO_NUMBER('2000'
                                                          || substr(cnp, 2, 2)),
                                                100) != 0
                                            OR MOD(TO_NUMBER('2000'
                                                             || substr(cnp, 2, 2)),
                                                   400) = 0 )
                                      AND TO_NUMBER(substr(cnp, 6, 2)) BETWEEN 1 AND 29 )
                                 OR ( TO_NUMBER(substr(cnp, 6, 2)) BETWEEN 1 AND 28 ) ) ) ) );

ALTER TABLE client
    ADD CONSTRAINT client_serie_ci_ck CHECK ( serie_ci IN ( 'XT', 'ZT' ) );

ALTER TABLE client ADD CONSTRAINT client_numar_ci_ck CHECK ( numar_ci > 0 );

ALTER TABLE client
    ADD CONSTRAINT client_nume_ck CHECK ( REGEXP_LIKE ( nume,
                                                        '^[A-Za-z]+$' ) );

ALTER TABLE client
    ADD CONSTRAINT client_prenume_ck CHECK ( REGEXP_LIKE ( prenume,
                                                           '^[A-Za-z -]+$' ) );

ALTER TABLE client ADD CONSTRAINT client_pk PRIMARY KEY ( cnp );

ALTER TABLE client ADD CONSTRAINT client_serie_ci_numar_ci_un UNIQUE ( serie_ci,
                                                                       numar_ci );

CREATE TABLE contact (
    oras    VARCHAR2(15),
    strada  VARCHAR2(30),
    email   VARCHAR2(20),
    telefon CHAR(10) NOT NULL,
    cnp     CHAR(13) NOT NULL
)
LOGGING;

ALTER TABLE contact
    ADD CONSTRAINT contact_oras_ck CHECK ( REGEXP_LIKE ( oras,
                                                         '^[A-Za-z0-9 -]+$' ) );

ALTER TABLE contact
    ADD CONSTRAINT contact_email_ck CHECK ( REGEXP_LIKE ( email,
                                                          '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE contact
    ADD CONSTRAINT contact_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                            '^07[0-9]{8}$' ) );

ALTER TABLE contact ADD CONSTRAINT contact_pk PRIMARY KEY ( cnp );

ALTER TABLE contact ADD CONSTRAINT contact_email_un UNIQUE ( email );

ALTER TABLE contact ADD CONSTRAINT contact_telefon_un UNIQUE ( telefon );

CREATE TABLE inchiriere (
    data_inceput DATE NOT NULL,
    data_sfarsit DATE,
    cost         NUMBER(6),
    cnp          CHAR(13) NOT NULL,
    tip          VARCHAR2(9) NOT NULL,
    model        VARCHAR2(7) NOT NULL
)
LOGGING;

ALTER TABLE inchiriere ADD CONSTRAINT inchiriere_data_sfarsit_ck CHECK ( data_inceput <= data_sfarsit );

ALTER TABLE inchiriere
    ADD CONSTRAINT inchiriere_pk
        PRIMARY KEY ( cnp,
                      data_inceput,
                      tip,
                      model );

ALTER TABLE articole
    ADD CONSTRAINT articole_accesoriu_fk
        FOREIGN KEY ( id_acesoriu )
            REFERENCES accesoriu ( id_acesoriu )
            NOT DEFERRABLE;

ALTER TABLE articole
    ADD CONSTRAINT articole_inchiriere_fk
        FOREIGN KEY ( cnp,
                      data_inceput,
                      tip,
                      model )
            REFERENCES inchiriere ( cnp,
                                    data_inceput,
                                    tip,
                                    model )
            NOT DEFERRABLE;

ALTER TABLE contact
    ADD CONSTRAINT contact_client_fk
        FOREIGN KEY ( cnp )
            REFERENCES client ( cnp )
            NOT DEFERRABLE;

ALTER TABLE inchiriere
    ADD CONSTRAINT inchiriere_bicicleta_fk
        FOREIGN KEY ( tip,
                      model )
            REFERENCES bicicleta ( tip,
                                   model )
            NOT DEFERRABLE;

ALTER TABLE inchiriere
    ADD CONSTRAINT inchiriere_client_fk
        FOREIGN KEY ( cnp )
            REFERENCES client ( cnp )
            NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER Trg_Inchiriere_Data 
    BEFORE INSERT OR UPDATE ON Inchiriere 
    FOR EACH ROW 
BEGIN
    IF (:new.Data_Inceput <= SYSDATE) THEN
        RAISE_APPLICATION_ERROR(-20001,
            'Data invalida: ' || TO_CHAR(:new.Data_Inceput, 'DD.MM.YYYY HH24:MI:SS') ||
            ' trebuie sa fie mai mare decat data curenta.');
    END IF;
END; 
/

CREATE SEQUENCE accesoriu_id_acesoriu_seq START WITH 1000 INCREMENT BY 37 MINVALUE 1000 MAXVALUE 1500 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER accesoriu_id_acesoriu_trg BEFORE
    INSERT ON accesoriu
    FOR EACH ROW
    WHEN ( new.id_acesoriu IS NULL )
BEGIN
    :new.id_acesoriu := accesoriu_id_acesoriu_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             0
-- ALTER TABLE                             31
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
